<?xml version="1.0" encoding="UTF-8"?>
<fpdoc-descriptions><package name="project1"><module name="ECSpinCtrls"><element name="TButtonStyle"><short>Enumerated type denoting style of the spin buttons.</short>
      </element><element name="TButtonStyle.ebsSeparated"><short>Each glyph is drawn on its own button (using ThemeServices).</short>
      </element><element name="TButtonStyle.ebsClearBlock"><short>All glyphs are drawn on one big button without any separtor.</short>
      </element><element name="TButtonStyle.ebsSplittedBlock"><short>All glyphs are drawn on one big button (using ThemeServices). They are separated with 3D lowered bevel.</short>
      </element><element name="TBtnKind"><short>Enumerated type denoting kind of the button.</short>
      </element><element name="TBtnKind.ebkMin"><short>Sets minumal value.</short>
      </element><element name="TBtnKind.ebkBigDec"><short>Big decrement.</short>
      </element><element name="TBtnKind.ebkDec"><short>Small decrement.</short>
      </element><element name="TBtnKind.ebkMiddle"><short>Sets middle value.</short>
      </element><element name="TBtnKind.ebkMax"><short>Sets maximal value.</short>
      </element><element name="TBtnKind.ebkBigInc"><short>Big increment.</short>
      </element><element name="TBtnKind.ebkInc"><short>Small increment.</short>
      </element><element name="TBtnKind.ebkMenu"><short>Menu button. Can invoke menu.</short>
      </element><element name="TBtnKind.ebkDrag"><short>Sets value by mouse dragging.</short>
      </element><element name="TDragOrientation"><short>Enumerated type denoting direction of mouse dragging.</short>
      </element><element name="TDragOrientation.edoBoth"><short>Both directions. Vertical dragging for approximate and horizontal dragging for fine setting (or reversely).</short>
      </element><element name="TDrawGlyphEvent"><short>Method type. Enables user-defined glyphs of buttons.</short>
      </element><element name="TESOption"><short>Enumerated type. Options for TECSpinEdit.</short>
      </element><element name="TESOption.esoArrowKeysExceed"><short>Arrow keys, Home/End and PageUp/PageDown can exceed Min and Max values and reach MaxInEdit and MinInEdit.</short>
      </element><element name="TESOption.esoEditingChangesValue"><short>Editing immediately changes value, it does not wait for EditingDone.</short>
      </element><element name="TESOption.esoGridMode"><short>Key is reseted if used in KeyDown (Key := #0;).</short>
      </element><element name="TESOption.esoHomeEndAlt"><short>Alt key is a modifier. Alt + Home/End can reach Max/Min.</short>
      </element><element name="TESOption.esoHomeEndCtrl"><short>Ctrl key is a modifier. Ctrl + Home/End can reach Max/Min.</short>
      </element><element name="TESOption.esoUpDownAlt"><short>Alt key is a modifier. Alt + arrow keys can reach spin.</short>
      </element><element name="TESOption.esoUpDownCtrl"><short>Ctrl key is a modifier. Ctrl + arrow keys can reach spin.</short>
      </element><element name="TESOption.esoUpDownShift"><short>Shiftt key is a modifier. Shift + arrow keys can reach spin.</short>
      </element><element name="TESOption.esoUpDownOnly"><short>No modifier. Arrow keys can reach spin.</short>
      </element><element name="TESOption.esoSpaceClicksMiddle"><short>Modifiers + Space clicks Middle, otherwise it opens Menu.</short>
      </element><element name="TESOptions"><short>Set of TESOption.</short>
      </element><element name="TGlyphStyle"><short>Style of built-in glyphs.</short>
      </element><element name="TModifierEnter"><short>Enumerated type denoting behaviour of modifier (alt, ctrl, meta, shift) + enter key.</short>
      </element><element name="TValueFormat"><short>Enumerated type denoting format of values.</short>
      </element>
    <element name="TCustomControlTimer"><short>Base class for TControlTimer. No <b>published</b> properties, no abstract classes.</short>
      </element><element name="TControlTimer"><short>Non visual component - advanced timer.</short>
      </element><element name="TCustomControlTimer.Delay"><short>The very first interval [miliseconds].</short>
      </element><element name="TCustomControlTimer.Repeating"><short>All the next intervals after the very first (2-nd, 3-rd, 4-th ...) [miliseconds].</short>
      </element><element name="TCustomControlTimer.Count"/><element name="TCustomControlTimer.MaxCount"><short>Count of intervals. 0 (default) or negative value means infinite count. After reaching this value is timer automatically disabled and OnTimerStop event is triggered.</short>
      </element><element name="TCustomControlTimer.Counter"><short>Count of intervals.</short>
      </element>
    <element name="TSingleSpinBtn"><short>Subclass. <link id="TCustomSpinBtns">TCustomSpinBtns</link> (or descendants) contain nine TSingleSpinBtn instances (one for each small button).</short>
      </element><element name="TECSpinBtns"><short>Visual component. Advanced alternative to TUpDown.</short>
      </element><element name="TECSpinBtnsPlus"><short>Visual component. Subclass designed for TECSpinEdit.</short>
      </element><element name="TECSpinEdit"><short>Visual component. Alternative to TSpinEdit and TFloatSpinEdit.</short>
      </element><element name="TECSpinController"><short>Non visual component. Designed for controlling properties of multiple <link id="TECSpinBtns">TECSpinBtns</link> and <link id="TECSpinEdit">TECSpinEdit</link>.</short>
      </element><element name="TECSpinController.ClientList"><short>Generic list of clients (TECSpinBtns and TECSpinEdits).</short>
      </element><element name="TECSpinController.ActionAltEnter"><short>Controls ActionAltEnter property of all TECSpinEdit clients.</short>
      </element><element name="TECSpinController.ActionCtrlEnter"><short>Controls ActionCtrlEnter property of all TECSpinEdit clients.</short>
      </element><element name="TECSpinController.ActionShiftEnter"><short>Controls ActionShiftEnter property of all TECSpinEdit clients.</short>
      </element><element name="TECSpinController.BtnBigDecWidth"><short>Controls BtnBigDecWidth property of all TECSpinBtns and TECSpinEdit clients.</short>
      </element><element name="TECSpinController.BtnBigIncWidth"><short>Controls BtnBigIncWidth property of all TECSpinBtns and TECSpinEdit clients.</short>
      </element><element name="TECSpinController.BtnDecWidth"><short>Controls BtnDecWidth property of all TECSpinBtns and TECSpinEdit clients.</short>
      </element><element name="TECSpinController.BtnDragWidth"><short>Controls BtnDragWidth property of all TECSpinBtns and TECSpinEdit clients.</short>
      </element><element name="TECSpinController.BtnIncWidth"><short>Controls BtnIncWidth property of all TECSpinBtns and TECSpinEdit clients.</short>
      </element><element name="TECSpinController.BtnMaxWidth"><short>Controls BtnMaxWidth property of all TECSpinBtns and TECSpinEdit clients.</short>
      </element><element name="TECSpinController.BtnMenuWidth"><short>Controls BtnMenuWidth property of all TECSpinBtns and TECSpinEdit clients.</short>
      </element><element name="TECSpinController.BtnMiddleWidth"><short>Controls BtnMiddleWidth property of all TECSpinBtns and TECSpinEdit clients.</short>
      </element><element name="TECSpinController.BtnMinWidth"><short>Controls BtnMinWidth property of all TECSpinBtns and TECSpinEdit clients.</short>
      </element><element name="TECSpinController.GlyphStyle"><short>Controls GlyphStyle property of all TECSpinBtns and TECSpinEdit clients.</short>
      </element><element name="TECSpinController.Indent"><short>Controls Indent property of all TECSpinEdit clients.</short>
      </element><element name="TECSpinController.Reversed"><short>Controls Reversed property of all TECSpinBtns and TECSpinEdit clients.</short>
      </element><element name="TECSpinController.Spacing"><short>Controls Spacing property of all TECSpinBtns and TECSpinEdit clients.</short>
      </element><element name="TECSpinController.Style"><short>Controls Style property of all TECSpinBtns and TECSpinEdit clients.</short>
      </element><element name="TECSpinController.TimerDelay"><short>Controls TimerDelay property of all TECSpinBtns and TECSpinEdit clients.</short>
      </element><element name="TECSpinController.TimerRepeating"><short>Controls TimerRepeating property of all TECSpinBtns and TECSpinEdit clients.</short>
      </element><element name="TECSpinController.Options"><short>Controls Options property of all TECSpinEdit clients.</short>
      </element><element name="TCustomSpinBtns"><short>Base class for <link id="TECSpinBtns">TECSpinBtns</link> and <link id="TECSpinBtnsPlus">TECSpinBtnsPlus</link>. No <b>published</b> properties, no abstract classes.</short>
      </element><element name="TSingleSpinBtn.BtnOrder"><short>Order for button. Buttons can be arranged to any order.</short>
      </element><element name="TSingleSpinBtn.Caption"><short>Caption. Only short captions (one or two letters) are recommended.</short>
      </element><element name="TSingleSpinBtn.GlyphColor"><short>Glyph color. Also font color of Caption.</short>
      </element><element name="TSingleSpinBtn.ImageIndex"><short>Image index. Image is taken from Parent's ImageList (property Images).</short>
      </element><element name="TSingleSpinBtn.Left"><short>Position of the button (0 is the most left etc.).</short>
      </element><element name="TSingleSpinBtn.Visible"><short>Visibility. Usually nine buttons are not needed. <link id="TCustomSpinBtns">TCustomSpinBtns</link> (or descendants) can consist from 1-9 buttons.</short>
      </element><element name="TSingleSpinBtn.Width"><short>Width of button. Each of buttons can have different width.</short>
      </element><element name="TSingleSpinBtn.Parent"><short>Determines Parent which this button belongs to.</short>
      </element><element name="TSingleSpinBtn.FEnabled"/><element name="TSingleSpinBtn.Enabled"><short>Buttons ebkMin, ebkMax, ebkDec, ebkInc, ebkBigDec and ebkBigInc are disabled when TECSpinBtns reaches minimum (Min) or maximum (Max).</short>
      </element><element name="TSingleSpinBtn.Kind"><short>Kind of button.</short>
      </element><element name="TCustomSpinBtns.BtnBigDec"><short>Subclass. Button designed for big decrease.</short>
      </element><element name="TCustomSpinBtns.BtnBigInc"><short>Subclass. Button designed for big increase.</short>
      </element><element name="TCustomSpinBtns.BtnDec"><short>Subclass. Button designed for small decrease.</short>
      </element><element name="TCustomSpinBtns.BtnInc"><short>Subclass. Button designed for small increase.</short>
      </element><element name="TCustomSpinBtns.BtnDrag"><short>Subclass. Button designed for mouse dragging, i.e. changing value by mouse move while left mouse button is held.</short>
      </element><element name="TCustomSpinBtns.BtnMax"><short>Subclass. Button designed for setting maximal possible value.</short>
      </element><element name="TCustomSpinBtns.BtnMin"><short>Subclass. Button designed for setting minimal possible value.</short>
      </element><element name="TCustomSpinBtns.BtnMiddle"><short>Subclass. Button designed for setting middle value. It can be 0 or any other user-defined value.</short>
      </element><element name="TCustomSpinBtns.BtnMenu"><short>Subclass. Button designed for executing menu or other user-defined action.</short>
      </element><element name="TCustomSpinBtns.OnMenuClick"><short>Event triggered on BtnMenu click.</short>
      </element><element name="TCustomSpinBtns.OnDrawGlyph"><short>Event triggered before glyph is painted to internal image (bitmap) of button. This enables to draw user-defined glyph.</short><descr>The OnDrawGlyph has the highest precedence. The second is TSingleSpinBtn.Caption. The third is image from Images. The last is built-in glyph.</descr>
      </element><element name="TCustomSpinBtns.OnChange"><short>Event triggered on change of Value property.</short>
      </element><element name="TCustomSpinBtns.Value"><short>Actual value. TECSpinBtns is designed in floating point arithmetic. If you need integer value, use trunc() or round() functions.</short>
      </element><element name="TCustomSpinBtns.TimerRepeating"><short>The next Intervals [miliseconds], i.e. 2-nd, 3-rd, 4-th and all following intervals. </short>
      </element><element name="TCustomSpinBtns.TimerDelay"><short>The very fisrt interval [miliseconds].</short>
      </element><element name="TCustomSpinBtns.Style"><short>Style of button glyphs.</short>
      </element><element name="TCustomSpinBtns.Spacing"><short>Spacing [pixels]. Distance between buttons.</short>
      </element><element name="TCustomSpinBtns.Reversed"><short>Determines whether button spinning is reversed.</short><descr>Reversed = False: UP - increases value; DOWN - decrases value (default)<br/>
 
Reversed = True: UP - decreases value; DOWN - increases value</descr>
      </element><element name="TCustomSpinBtns.PageSize"><short>Big increment or decrement. Used by BtnBigInc and BtnBigDec.</short>
      </element><element name="TCustomSpinBtns.DragControl"><short>Determines which mouse buttons can be used for dragging besides the drag button (BtnDrag). User can always use BtnDrag and left mouse button.</short><descr>This enables mouse dragging even if BtnDrag is not visible.<br/> 
Example: DragControl = [mbMiddle] captures mouse and enables dragging when any button of TECSpinBtns (including disabled ones and BtnDrag) is clicked by middle mouse button.</descr>
      </element><element name="TCustomSpinBtns.MenuControl"><short>Determines which mouse buttons can be used for executing menu besides the menu button (BtnMenu). User can always use BtnMenu and left mouse button.</short><descr>This enables executing of menu or user defined action even if BtnMenu is not visible.<br/>
 
Example: MenuControl = [mbMiddle] executes menu or user defined action when any button of TECSpinBtns (including disabled ones and BtnMenu) is clicked by middle mouse button.</descr>
      </element><element name="TCustomSpinBtns.Min"><short>Minimal possible value.</short>
      </element><element name="TCustomSpinBtns.Max"><short>Maximal possible value.</short>
      </element><element name="TCustomSpinBtns.Increment"><short>Small increment or decrement. Used by BtnInc and BtnDec.</short>
      </element><element name="TCustomSpinBtns.DragOrientation"><short>Orientation of mouse dragging. Possible directions: vertical (edoVertical, default), horizontal (edoHorizontal) and both (edoBoth).</short>
      </element><element name="TCustomSpinBtns.GlyphStyle"><short>Style of glyphs.</short>
      </element><element name="TCustomSpinBtns.Images"><short>Image list. Single buttons can take images from here. They have ImageIndex property for this purpose.</short>
      </element><element name="TCustomSpinBtns.Middle"><short>Middle (0) or any other user-defined value.</short>
      </element><element name="TCustomSpinBtns.MouseFromMiddle"><short>Determines whether mouse dragging starts at actual value (False, default) or at Middle value (True).</short>
      </element><element name="TCustomSpinBtns.Mode"><short>Denoting whether the spin control is in eimContinuous (normal, default) or eimDiscrete mode. In discrete mode. <link id="TCustomSpinBtns.Value">Value</link> of the spin control can be integer multiple of the DiscreteChange only.</short>
      </element><element name="TCustomSpinBtns.DiscreteChange"><short>Applies only when Mode = eimDiscrete. <link id="TCustomSpinBtns.Value">Value</link>can hold only integer multiples of DiscreteChange.</short>
      </element><element name="TCustomSpinBtns.MouseStepPixelsX"><short>Mouse sensitivity in horizontal direction.</short>
      </element><element name="TCustomSpinBtns.MouseStepPixelsY"><short>Mouse sensitivity in vertical direction.</short>
      </element><element name="TCustomSpinBtns.MouseIncrementX"><short>Increment for horizontal mouse dragging.</short>
      </element><element name="TCustomSpinBtns.MouseIncrementY"><short>Increment for vertical mouse dragging.</short>
      </element><element name="TECSpinBtnsPlus.MaxInEdit"><short>Designed specially for TECSpinEdit. Value edited by keyboard can exceed Max.</short><descr>Feature for experienced users. Usually, Max = MaxInEdit.</descr>
      </element><element name="TECSpinBtnsPlus.MinInEdit"><short>Designed specially for TECSpinEdit. Value edited by keyboard can exceed Min.</short><descr>Feature for experienced users. Usually, Min = MinInEdit.</descr>
      </element><element name="TECSpinEdit.ActionAltEnter"><short>Determines what action will happen when user presses Alt+Enter.</short><descr>Possibilities: No action (default), menu button click, middle button click.</descr>
      </element><element name="TECSpinEdit.ActionCtrlEnter"><short>Determines what action will happen when user presses Ctrl+Enter.</short><descr>Possibilities: No action, menu button click (default), middle button click.</descr>
      </element><element name="TECSpinEdit.ActionShiftEnter"><short>Determines what action will happen when user presses Shift+Enter.</short><descr>Possibilities: No action (default), menu button click, middle button click.</descr>
      </element><element name="TECSpinEdit.Buttons"><short>Subclass. Buttons sticked to line-edit.</short>
      </element><element name="TECSpinEdit.Indent"><short>Indent [pixels] of buttons. Distance between line-edit and buttons.</short>
      </element><element name="TECSpinEdit.BiDiMode"><short>Bi-directional mode. Inherited property.</short><descr>Buttons are sticked to the right for left-to-right  languages and to the left for right-to-left languages.</descr>
      </element><element name="TECSpinBtns.Controller"><short>Link to <link id="TECSpinController">TECSpinController</link>. Controller will control set selected properties.</short>
      </element><element name="TECSpinEdit.Controller"><short>Link to <link id="TECSpinController">TECSpinController</link>. Controller will control selected set of properties.</short>
      </element><element name="TECSpinEdit.WidthInclBtns"><short>Width including button width. Common property "Width" gives width of edit only. WidthInclBtns gives width including Buttons and Indent.</short>
      </element><element name="TECSpinEdit.Value"><short>Actual value. This property reads and writes value from Buttons.Value.</short>
      </element><element name="TECSpinEdit.ValueFormat"><short>Format of value in line-edit.</short>
      </element><element name="TECSpinEdit.Items"><short>Applies only for ValueFormat = evfText or evfCombined. Value is index of this string list.</short>
      </element><element name="TECSpinEdit.MantissaExp"><short>Applies only for ValueFormat = evfExponent or evfMantissa.</short><descr>evfExponent: Value is exponent, MantissaExp is mantissa.<br/>
 
evfMantissa: Value is mantissa, MantissaExp is exponent.<br/><br/>
 
Example:<br/>
 
MantissaExp = 2<br/>
 
evfExponent: 1, 2, 4, 8, 16, 32, 64, ...<br/> 
evfMantissa: 1, 4, 9, 16, 25, 36, 49, 64, ...</descr>
      </element><element name="TECSpinEdit.DateTimeFormat"><short>Applies only for ValueFormat = evfDate or evfTime.</short>
      </element><element name="TECSpinEdit.Options"><short>See <link id="TESOption"/>.</short>
      </element><element name="TECSpinEdit.Digits"><short>Number of digits. Applies to several ValueFormats.</short><descr>evfRound: number of decimal places.<br/> 
evfExponent: number of decimal places.<br/> 
evfExponential: number of decimal places and digits of exponent.<br/> 
evfMantissa: number of decimal places.<br/> 
evfHexadecimal: number of digits.<br/> 
evfMarkHexadec: number of digits after $.<br/> 
evfOctal: number of digits.<br/> 
evfBinary: number of digits.<br/>
        </descr>
      </element><element name="TControlTimer.Counter"/>
    </module>
  </package>
</fpdoc-descriptions>
